#jinja2:trim_blocks: "true", lstrip_blocks: "true"
{% macro apiVersion(provider) -%}
"{{ smiths_config_metadata.api_versions[provider] }}"
{%- endmacro %}
{% macro subscriptionId(sub) -%}
{{ smiths_config_subscriptions[sub].subscription_id }}
{%- endmacro %}
{% macro vnetResourceId(sub, loc, env) -%}
{{ resourceId(sub, vnetResourceGroup(sub, loc, env), 'Microsoft.Network/virtualNetworks', vnetName(sub, loc, env)) }}
{%- endmacro %}
{% macro resourceId(sub, rg, type, name) -%}
"[resourceId('{{ subscriptionId(sub) }}', '{{ rg }}', '{{ type }}', '{{ name }}')]"
{%- endmacro %}
{% macro findIpAddressFromSubnet(sub, loc, vnet, subnet, index) -%}
{% set subnet = smiths_config_subscriptions[sub].locations[loc].networking.virtual_networks[vnet].subnets[subnet].address_space %}
{{ subnet | ipsubnet(32, index) | ipaddr('address') }}
{%- endmacro %}
{% macro dnsServers(loc) -%}
[ {{ findIpAddressFromSubnet("bis_primary", loc, "shr", "shared", 4) }}, {{ findIpAddressFromSubnet("bis_primary", loc, "shr", "shared", 5) }} ]
{%- endmacro %}
{% macro nextHop(loc) -%}
{{ findIpAddressFromSubnet("bis_primary", loc, "shr", "fwint", 4) }}
{%- endmacro %}
{% macro subscriptionDivision(sub) -%}
{{ smiths_config_subscriptions[sub].metadata.division }}
{%- endmacro %}
{% macro vnetName(sub, loc, env) -%}
{{ loc }}-{{ subscriptionDivision(sub) }}-{{ env }}-vnet01
{%- endmacro %}
{% macro subnetName(sub, loc, env, purp) -%}
{{ loc }}-{{ subscriptionDivision(sub) }}-{{ env }}-{{ purp }}-subnet01
{%- endmacro %}
{% macro vnetResourceGroup(sub, loc, env) -%}
{{ loc }}-{{ subscriptionDivision(sub) }}-{{ env }}-vnet-rg
{%- endmacro %}
{% macro nsgLogsResourceGroup(sub, loc, env) -%}
{{ loc }}-{{ subscriptionDivision(sub) }}-{{ env }}-diag-rg
{%- endmacro %}
# DO NOT ALTER THE INDENTING
{% macro networkingTags(env) -%}
{% set ntags = smiths_config_metadata.tags.networking | combine({'Division': smiths_config_metadata.divisions[subscription.metadata.division].name, 'Timezone': smiths_config_metadata.locations[location_code].timezone, 'Environment': smiths_config_metadata.environments[env].name }) %}
tags:
      {% for ntag in (ntags | dict2items) %}{# for tag #}
        {{ ntag.key }}: "{{ ntag.value }}"
      {% endfor %}{# endfor tag #}
{%- endmacro %}
{% set subscription = smiths_config_subscriptions[subscription_code] %}
{% set location = subscription.locations[location_code] %}
{% set networking_tags = smiths_config_metadata.tags.networking | default({}) %}
{% set template_tags = subscription.tags | combine(networking_tags) %}
{% set location_name = smiths_config_metadata.locations[location_code].name %}

# Deploy network watcher
{% set nw_rg = location_code ~ "-" ~ subscription.metadata.division ~ "-" ~ subscription.metadata.environment ~ "-nw-rg" %}
{% set nw_name = location_code ~ "-" ~ subscription.metadata.division ~ "-" ~ subscription.metadata.environment ~ "-nw01" %}
- name: network-watcher
  resource_group: {{ nw_rg }}
  location: {{ location_name }}
  resources:
    - type: Microsoft.Network/networkWatchers
      name: {{ nw_name }}
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      {{ networkingTags(subscription.metadata.environment) }}
      properties: {}

# Deploy virtual networks
{% for vnet_kv in location.networking.virtual_networks | dict2items %}{# for vnet_kv #}
{% set vnet = vnet_kv.value %}
{% set vnet_name = vnetName(subscription_code, location_code, vnet_kv.key) %}
{% set vnet_metadata = vnet.metadata | default({}) %}

# Virtual network, subnets, NSGs, custom routes, NSG diagnostics
- name: vnet
  resource_group: {{ vnetResourceGroup(subscription_code, location_code, vnet_kv.key) }}
  location: {{ location_name }}
  resources:
    - type: Microsoft.Network/virtualNetworks
      name: {{ vnet_name }}
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      {{ networkingTags(vnet_metadata.environment | default(subscription.metadata.environment)) }}
      properties:
        addressSpace:
          addressPrefixes:
          {% for address_prefix in vnet.address_space %}{# for address_prefix #}
            - {{ address_prefix }}
          {% endfor %}{# endfor address_prefix #}
        dhcpOptions:
          dnsServers: {{ dnsServers(location_code) }}

    - type: Microsoft.Network/virtualNetworks/virtualNetworkPeerings
      name: {{ vnet_name }}/{{ vnetName("bis_primary", location_code, "shr") }}-vnetpeer
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      dependsOn:
        - {{ vnet_name }}
      properties:
        allowVirtualNetworkAccess: true
        allowForwardedTraffic: true
        allowGatewayTransit: false
        useRemoteGateways: false
        remoteVirtualNetwork:
          id: {{ vnetResourceId("bis_primary", location_code, "shr") }}

    {% for subnet_kv in vnet.subnets | dict2items %}{# for subnet_kv #}
    {% set subnet = subnet_kv.value %}
    {% set subnet_name = subnetName(subscription_code, location_code, vnet_kv.key, subnet_kv.key) %}
    {% set nsg_name = subnet_name ~ "-nsg" %}
    {% set route_table_name = subnet_name ~ "-route" %}

    - type: Microsoft.Network/virtualNetworks/subnets
      name: {{ vnet_name }}/{{ subnet_name }}
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      dependsOn:
        - {{ vnet_name }}
        - {{ nsg_name }}
        - {{ route_table_name }}
      properties:
        addressPrefix: {{ subnet.address_space }}
        networkSecurityGroup:
          id: "[resourceId('Microsoft.Network/networkSecurityGroups', '{{ nsg_name }}')]"
        routeTable:
          id: "[resourceId('Microsoft.Network/routeTables', '{{ route_table_name }}')]"

    - type: Microsoft.Network/networkSecurityGroups
      name: {{ nsg_name }}
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      tags:
      {{ networkingTags(vnet_metadata.environment | default(subscription.metadata.environment)) }}

    - type: Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings
      name: {{ nsg_name }}/microsoft.insights/{{ nsg_name }}-diag01
      apiVersion: {{ smiths_config_metadata.api_versions.insights }}
      dependsOn:
      - {{ nsg_name }}
      properties:
        logs:
          - category: NetworkSecurityGroupEvent
            enabled: true
            retentionPolicy:
              days: 90
              enabled: true
          - category: NetworkSecurityGroupRuleCounter
            enabled: true
            retentionPolicy:
              days: 90
              enabled: true
        metrics: []
        workspaceId: {{ resourceId("bis_primary", "zna3-bis-prd-logging-rg", "Microsoft.OperationalInsights/workspaces", "zna3-bis-prd-log01") }}

    - type: Microsoft.Network/routeTables
      name: {{ route_table_name }}
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      tags:
      {{ networkingTags(vnet_metadata.environment | default(subscription.metadata.environment)) }}

    - type: Microsoft.Network/routeTables/routes
      name: {{ route_table_name }}/Default
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      dependsOn:
        - {{ route_table_name }}
      properties:
        addressPrefix: 0.0.0.0/0
        nextHopType: VirtualAppliance
        nextHopIpAddress: {{ nextHop(location_code) }}

    {% for address_range in smiths_config_subscriptions.bis_primary.locations[location_code].networking.virtual_networks.shr.address_space %}{# for address_range #}
    - type: Microsoft.Network/routeTables/routes
      name: {{ route_table_name }}/BIS-Shared
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      dependsOn:
        - {{ route_table_name }}
      properties:
        addressPrefix: {{ address_range }}
        nextHopType: VirtualAppliance
        nextHopIpAddress: {{ nextHop(location_code) }}
    {% endfor %}{# endfor address_range #}
    {% endfor %}{# endfor subnet #}

  {% endfor %}{# endfor vnet #}

- name: vnet-peering
  resource_group: {{ vnetResourceGroup("bis_primary", location_code, "shr") }}
  location: {{ location_name }}
  subscription_id: {{ subscriptionId("bis_primary") }}
  resources:
    {% for vnet_kv in location.networking.virtual_networks | dict2items %}{# for vnet_kv #}
    {% set vnet = vnet_kv.value %}
    {% set vnet_name = vnetName(subscription_code, location_code, vnet_kv.key) %}
    {% set remote_vnet_name = vnetName("bis_primary", location_code, "shr") %}
    - type: Microsoft.Network/virtualNetworks/virtualNetworkPeerings
      name: {{ remote_vnet_name }}/{{ vnet_name }}-vnetpeer
      apiVersion: {{ apiVersion("networking") }}
      location: {{ location_name }}
      dependsOn:
        - {{ remote_vnet_name }}
      properties:
        allowVirtualNetworkAccess: true
        allowForwardedTraffic: true
        allowGatewayTransit: false
        useRemoteGateways: false
        remoteVirtualNetwork:
          id: {{ vnetResourceId(subscription_code, location_code, vnet_kv.key) }}
    {% endfor %}{# endfor vnet_kv #}
